name: Auto Test (CI)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_ASSISTANT_ID: ${{ secrets.OPENAI_ASSISTANT_ID }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
      LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
      GIPHY_ASSET_TOKEN: ${{ secrets.GIPHY_ASSET_TOKEN }}
      MEDIUM_USERNAME: ${{ secrets.MEDIUM_USERNAME }}
      TEST_MODE: true # Hardcoded to 'true' for always running tests
      ONE_WORKING_LLM: true
    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Install Pipenv
        run: pip install pipenv

      - name: 📦 Install Dependencies with Pipenv
        run: pipenv install --deploy --ignore-pipfile

      - name: Debug Hugging Face Token
        run: |
          echo "HF token starts with: ${HUGGINGFACE_API_KEY:0:5}"

      - name: 🔬 Run Tests
        id: run_tests
        run: |
          pipenv run pytest --maxfail=1 --disable-warnings -q
        continue-on-error: true

      - name: 📝 Set Test Status Cache
        if: always()
        id: test_status
        uses: actions/cache@v3
        with:
          path: _temp/test_status.txt
          key: test-status-${{ github.ref_name }}
          restore-keys: |
            test-status-

      - name: 💾 Save Test Status - Success
        if: steps.run_tests.outcome == 'success'
        run: |
          mkdir -p _temp
          echo "TRUE" > _temp/test_status.txt
          echo "Tests passed successfully!"

      - name: 💾 Save Test Status - Failure
        if: steps.run_tests.outcome != 'success'
        run: |
          mkdir -p _temp
          echo "FALSE" > _temp/test_status.txt
          echo "Tests failed! RSS-to-LinkedIn workflow will be blocked."

      - name: 🚀 Deploy Application
        if: steps.run_tests.outcome == 'success'
        run: |
          echo "Deploying the application to production!"
          # Add your actual deployment script here
