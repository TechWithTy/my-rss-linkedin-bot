name: RSS to LinkedIn

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allows manual trigger

jobs:
  check_rss:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Restore Latest Post Cache
        id: cache_latest
        uses: actions/cache@v3
        with:
          path: latest_post.txt
          key: latest-post

      - name: Fetch RSS Feed
        id: fetch_rss
        run: |
          FEED_URL="https://medium.com/feed/@${{ secrets.MEDIUM_USERNAME }}"
          echo "Using RSS Feed: $FEED_URL"
          
          RESPONSE=$(curl -s -L "$FEED_URL")
          
          # Ensure the response is valid XML
          if echo "$RESPONSE" | grep -iq "<rss"; then
            LATEST_ENTRY=$(echo "$RESPONSE" | xmllint --xpath '//item[1]/link/text()' - 2>/dev/null || echo "")
            echo "latest_post=$LATEST_ENTRY" >> $GITHUB_ENV
          else
            echo "Error: Invalid RSS feed response"
            exit 1
          fi

      - name: Check for new post
        id: check_new_post
        run: |
          if [ ! -f latest_post.txt ] || ! grep -q "$LATEST_ENTRY" latest_post.txt; then
            echo "new_post=true" >> $GITHUB_ENV
            echo "$LATEST_ENTRY" > latest_post.txt
          else
            echo "new_post=false" >> $GITHUB_ENV
          fi

      - name: Process blog post with OpenAI Assistant
        if: env.new_post == 'true'
        id: process_blog
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          THREAD_ID=$(curl -s -X POST "https://api.openai.com/v1/threads" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" | jq -r '.id')

          curl -s -X POST "https://api.openai.com/v1/threads/$THREAD_ID/messages" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "role": "user",
              "content": "Summarize this blog post into an engaging LinkedIn post: '"$LATEST_ENTRY"'"
            }'

          RUN_ID=$(curl -s -X POST "https://api.openai.com/v1/threads/$THREAD_ID/runs" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "assistant_id": "${{ secrets.OPENAI_ASSISTANT_ID }}"
            }' | jq -r '.id')

          STATUS="in_progress"
          while [[ "$STATUS" == "in_progress" || "$STATUS" == "queued" ]]; do
            sleep 5
            STATUS=$(curl -s -X GET "https://api.openai.com/v1/threads/$THREAD_ID/runs/$RUN_ID" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" | jq -r '.status')
          done

          PROCESSED_CONTENT=$(curl -s -X GET "https://api.openai.com/v1/threads/$THREAD_ID/messages" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" | jq -r '.data[0].content[0].text.value')

          echo "processed_content=$PROCESSED_CONTENT" >> $GITHUB_ENV


      - name: Post to LinkedIn
        if: env.new_post == 'true'
        env:
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
        run: |
          curl -X POST "https://api.linkedin.com/v2/ugcPosts" \
            -H "Authorization: Bearer $LINKEDIN_ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "author": "urn:li:person:yourLinkedInID",
              "lifecycleState": "PUBLISHED",
              "specificContent": {
                "com.linkedin.ugc.ShareContent": {
                  "shareCommentary": {
                    "text": "'"$processed_content"'"
                  },
                  "shareMediaCategory": "ARTICLE",
                  "media": [{
                    "status": "READY",
                    "originalUrl": "'"$LATEST_ENTRY"'"
                  }]
                }
              },
              "visibility": {
                "com.linkedin.ugc.MemberNetworkVisibility": "PUBLIC"
              }
            }'
