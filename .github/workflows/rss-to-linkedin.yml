name: RSS to LinkedIn

on:
  schedule:
    - cron: '0 * * * *'  # Every hour

  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_ASSISTANT_ID: ${{ secrets.OPENAI_ASSISTANT_ID }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
      LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
      GIPHY_ASSET_TOKEN: ${{ secrets.GIPHY_ASSET_TOKEN }}
      MEDIUM_USERNAME: ${{ secrets.MEDIUM_USERNAME }}
      TEST_MODE: false

    steps:
      - name: üßæ Checkout Repository
        uses: actions/checkout@v3

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üì¶ Install Pipenv
        run: pip install pipenv

      - name: üì¶ Install Dependencies with Pipenv
        run: pipenv install --deploy --ignore-pipfile

      - name: ‚úîÔ∏è Check Test Status
        id: check_test_status
        uses: actions/cache@v3
        with:
          path: _temp/test_status.txt
          key: test-status-${{ github.ref_name }}
          restore-keys: |
            test-status-

      - name: üìù Read Test Status
        id: read_test_status
        run: |
          mkdir -p _temp
          if [ -f _temp/test_status.txt ]; then
            TEST_STATUS=$(cat _temp/test_status.txt)
            echo "TEST_STATUS=$TEST_STATUS" >> $GITHUB_OUTPUT
            echo "Test status is: $TEST_STATUS"
          else
            echo "TEST_STATUS=UNKNOWN" >> $GITHUB_OUTPUT
            echo "No test status found, assuming tests were not run."
          fi

      - name: ‚ùå Fail Workflow If Tests Failed
        if: steps.read_test_status.outputs.TEST_STATUS == 'FALSE'
        run: |
          echo "::error::WORKFLOW BLOCKED: Tests have failed in the Auto Test workflow!"
          echo "::error::Please fix the failing tests before the RSS-to-LinkedIn workflow can run."
          echo "::error::Check the Auto Test (CI) workflow logs for details on the test failures."
          exit 1

      - name: ‚ö†Ô∏è Warning If Test Status Unknown
        if: steps.read_test_status.outputs.TEST_STATUS == 'UNKNOWN'
        run: |
          echo "::warning::No test status found. Running without test verification."
          echo "::warning::This may occur if the workflow is run manually or on schedule without a recent test run."

      - name: ‚ôªÔ∏è Ensure Cache Path Exists
        if: steps.read_test_status.outputs.TEST_STATUS != 'FALSE'
        run: mkdir -p _temp && touch _temp/blog_cache.json

      - name: ‚ôªÔ∏è Restore Blog Cache
        if: steps.read_test_status.outputs.TEST_STATUS != 'FALSE'
        uses: actions/cache@v3
        with:
          path: _temp/blog_cache.json
          key: blog-cache-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            blog-cache-

      - name: üöÄ Run Main App Script
        if: steps.read_test_status.outputs.TEST_STATUS != 'FALSE'
        run: pipenv run app

      - name: üíæ Save Blog Cache
        if: always() && steps.read_test_status.outputs.TEST_STATUS != 'FALSE'
        uses: actions/cache@v3
        with:
          path: _temp/blog_cache.json
          key: blog-cache-${{ runner.os }}-${{ github.ref_name }}